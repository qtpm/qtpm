cmake_minimum_required(VERSION 3.1.0)[[$root := .]]

# project global setting

project([[.TargetSmall]])

set([[.TargetLarge]]_MAJOR_VERSION [[.VersionMajor]])
set([[.TargetLarge]]_MINOR_VERSION [[.VersionMinor]])
set([[.TargetLarge]]_PATCH_VERSION [[.VersionPatch]])
set([[.TargetLarge]]_VERSION
 ${[[.TargetLarge]]_MAJOR_VERSION}.${[[.TargetLarge]]_MINOR_VERSION}.${[[.TargetLarge]]_PATCH_VERSION})

# compiler setting

set(CMAKE_CXX_STANDARD 11)

if(APPLE)
    set(CMAKE_MACOSX_RPATH ON)
    set(CMAKE_SKIP_BUILD_RPATH FALSE)
    set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
    set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
    set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
    list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir)
    if("${isSystemDir}" STREQUAL "-1")
        set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
    endif()
endif()

# enable Qt

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
if(DEFINED ENV{QTDIR})
    set(CMAKE_PREFIX_PATH "$ENV{QTDIR}")
endif()
[[range $index, $qtmodule := .QtModules]]find_package(Qt5[[$qtmodule]] REQUIRED)
[[end]]

# include extra settings

include("CMakeExtra.txt")

# build setting

include_directories("${PROJECT_SOURCE_DIR}/src")
[[if gt (len .Resources) 0]]qt5_add_resources(QRC[[range .Resources]] ${PROJECT_SOURCE_DIR}/resource/[[.]][[end]])[[end]]
add_library([[.TargetSmall]] SHARED [[range $source := .Sources]] [[$source]][[end]][[if gt (len .Resources) 0]] ${QRC}[[end]])
SET_TARGET_PROPERTIES([[.TargetSmall]] PROPERTIES VERSION ${[[.TargetLarge]]_VERSION} SOVERSION ${[[.TargetLarge]]_MAJOR_VERSION})
qt5_use_modules([[.TargetSmall]][[range $module := $root.QtModules]] [[$module]][[end]])

[[if gt (len .Tests) 0]]
# enable tests

enable_testing()
find_package(Qt5Test REQUIRED)
[[range $test := .Tests]]
add_executable([[$test]] ${PROJECT_SOURCE_DIR}/test/[[$test]].cpp[[range $source := $root.Sources]] [[$source]][[end]][[range $source := $root.ExtraTestSources]] {PROJECT_SOURCE_DIR}/test/[[$source]][[end]][[if gt (len $root.Resources) 0]] ${QRC}[[end]])
add_test(NAME [[$test]] COMMAND [[$test]] WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/build)
qt5_use_modules([[$test]] Test[[range $module := $root.QtModules]] [[$module]][[end]])
[[end]]
[[end]]
# install setting

INSTALL(TARGETS [[.TargetSmall]] LIBRARY DESTINATION lib)
[[if gt (len .InstallHeaders) 0]]INSTALL(FILES[[range $header := .InstallHeaders]] [[$header]][[end]] DESTINATION include/[[.TargetSmall]])[[end]]